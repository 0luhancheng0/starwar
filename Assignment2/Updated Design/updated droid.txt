1.  Droid should extends SWActor not instead of SWEntity

    We decide to use SWActor rather than SWEntity as the superclass of the
    Droid. Since for Droid, it has hitpoints attribute as other actor, and
    it need to take some movement while the time passing

2.  Own should extends SWAffordance instead of Affordance

    The SWAffordance offer more specialized interface for the game

3.  There are dependency between Droid with SWWorld, Scheduler, MessageRenderer
    CompassBearing and Grid

    The SWWorld and MessageRenderer are passed as parameter, and Scheduler is
    used to schedule the move event when Droid move. The CompassBearing is used
    to be iterated through all the possible direction. The Grid instance is 
    returned by the method call in SWWorld, and the method
    getLocationByCoordinates() is called to determine the location of badlands. They all implies dependency

4.  Method in own class changed

    The inherited methods canDO(), act(), getDescription() are enough for own
    class

5.  There are associativity between Droid with SWActor and Direction

    Droid need to note the owner of itself along with it to determine the
    behavior of itself. And Direction should also be remembered since it need
    to stick with it whenever there is an exit in that direction while wondering

6.  There are also dependency between Own class with SWEntityInterface, Droid,
    SWActor and MessageRenderer

    SWEntityInterface and MessageRenderer are passed as parameter in the
    constructor. Droid and SWActor are used inside act().
